# 1. –°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å TrafficLight (—Å–≤–µ—Ç–æ—Ñ–æ—Ä).
# –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É –Ω–µ–≥–æ –æ–¥–∏–Ω –∞—Ç—Ä–∏–±—É—Ç color (—Ü–≤–µ—Ç) –∏ –º–µ—Ç–æ–¥ running (–∑–∞–ø—É—Å–∫);
# –∞—Ç—Ä–∏–±—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π;
# –≤ —Ä–∞–º–∫–∞—Ö –º–µ—Ç–æ–¥–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞ –≤ —Ä–µ–∂–∏–º—ã: –∫—Ä–∞—Å–Ω—ã–π, –∂—ë–ª—Ç—ã–π, –∑–µ–ª—ë–Ω—ã–π;
# –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–∫—Ä–∞—Å–Ω—ã–π) —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 7 —Å–µ–∫—É–Ω–¥, –≤—Ç–æ—Ä–æ–≥–æ
# (–∂—ë–ª—Ç—ã–π) ‚Äî 2 —Å–µ–∫—É–Ω–¥—ã, —Ç—Ä–µ—Ç—å–µ–≥–æ (–∑–µ–ª—ë–Ω—ã–π) ‚Äî –Ω–∞ –≤–∞—à–µ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ;
# –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏ –¥–æ–ª–∂–Ω–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
# (–∫—Ä–∞—Å–Ω—ã–π, –∂—ë–ª—Ç—ã–π, –∑–µ–ª—ë–Ω—ã–π);
# –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –ø—Ä–∏–º–µ—Ä–∞, —Å–æ–∑–¥–∞–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ –≤—ã–∑–≤–∞–≤ –æ–ø–∏—Å–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥.
# –ó–∞–¥–∞—á—É –º–æ–∂–Ω–æ —É—Å–ª–æ–∂–Ω–∏—Ç—å, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–≤ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Ä—è–¥–∫–∞ —Ä–µ–∂–∏–º–æ–≤.
# –ü—Ä–∏ –µ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏ –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞—Ç—å —Å–∫—Ä–∏–ø—Ç.
import time


class TrafficLight(object):
    __color = ''
    red_duration = 7
    yellow_duration = 2
    green_duration = 30
    previous_light = 'yellow'

    def running(self):
        while True:
            self.red()
            self.yellow()
            self.green()

    @staticmethod
    def close_program():
        print("\n–ù–∞—Ä—É—à–µ–Ω –ø–æ—Ä—è–¥–æ–∫ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤, –∑–∞–≤–µ—Ä—à–∞—é –ø—Ä–æ–≥—Ä–∞–º–º—É...")
        exit()

    def green(self):
        if self.previous_light == 'yellow':
            self.previous_light = 'green'
            self.__color = 'green'
            print("\r", end="")
            print("üü¢", end="")
            time.sleep(self.green_duration)
        else:
            self.close_program()

    def red(self):
        if self.previous_light == 'yellow':
            self.previous_light = 'red'
            self.__color = 'red'
            print("\r", end="")
            print("üî¥", end="")
            time.sleep(self.red_duration)
        else:
            self. close_program()

    def yellow(self):
        if self.previous_light == 'red':
            self.previous_light = 'yellow'
            self.__color = 'yellow'
            print("\r", end="")
            print("üü°", end="")
            time.sleep(self.yellow_duration)
        else:
            self.close_program()


if __name__ == "__main__":
    traffic_light = TrafficLight()
    traffic_light.running()

